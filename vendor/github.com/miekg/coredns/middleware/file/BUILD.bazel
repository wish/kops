load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "closest.go",
        "example_org.go",
        "file.go",
        "lookup.go",
        "notify.go",
        "secondary.go",
        "setup.go",
        "wildcard.go",
        "xfr.go",
        "zone.go",
    ],
    importmap = "k8s.io/kops/vendor/github.com/miekg/coredns/middleware/file",
    importpath = "github.com/miekg/coredns/middleware/file",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/fsnotify/fsnotify:go_default_library",
        "//vendor/github.com/mholt/caddy:go_default_library",
        "//vendor/github.com/miekg/coredns/core/dnsserver:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/file/tree:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/pkg/rcode:go_default_library",
        "//vendor/github.com/miekg/coredns/request:go_default_library",
        "//vendor/github.com/miekg/dns:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = [
        "closest_test.go",
        "cname_test.go",
        "delegation_test.go",
        "dnssec_test.go",
        "dnssex_test.go",
        "ds_test.go",
        "ent_test.go",
        "file_test.go",
        "lookup_test.go",
        "nsec3_test.go",
        "reload_test.go",
        "secondary_test.go",
        "setup_test.go",
        "wildcard_test.go",
        "xfr_test.go",
        "zone_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "//vendor/github.com/mholt/caddy:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/pkg/dnsrecorder:go_default_library",
        "//vendor/github.com/miekg/coredns/middleware/test:go_default_library",
        "//vendor/github.com/miekg/coredns/request:go_default_library",
        "//vendor/github.com/miekg/dns:go_default_library",
        "//vendor/golang.org/x/net/context:go_default_library",
    ],
)
