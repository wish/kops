load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library")

go_library(
    name = "go_default_library",
    srcs = ["gen_kube_man.go"],
    importmap = "k8s.io/kops/vendor/k8s.io/kubernetes/cmd/genman",
    importpath = "k8s.io/kubernetes/cmd/genman",
    visibility = ["//visibility:private"],
    deps = [
        "//vendor/github.com/cpuguy83/go-md2man/md2man:go_default_library",
        "//vendor/github.com/spf13/cobra:go_default_library",
        "//vendor/github.com/spf13/pflag:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/server:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/cloud-controller-manager/app:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/genutils:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kube-apiserver/app:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kube-controller-manager/app:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kube-proxy/app:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kube-scheduler/app:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kubeadm/app/cmd:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kubelet/app:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/kubectl/cmd:go_default_library",
    ],
)

go_binary(
    name = "genman",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)
