load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "attachdetachcontroller.go",
        "csrsigningcontroller.go",
        "daemonsetcontroller.go",
        "deploymentcontroller.go",
        "deprecatedcontroller.go",
        "endpointcontroller.go",
        "garbagecollectorcontroller.go",
        "hpacontroller.go",
        "jobcontroller.go",
        "namespacecontroller.go",
        "nodeipamcontroller.go",
        "nodelifecyclecontroller.go",
        "options.go",
        "persistentvolumebindercontroller.go",
        "podgccontroller.go",
        "replicasetcontroller.go",
        "replicationcontroller.go",
        "resourcequotacontroller.go",
        "serviceaccountcontroller.go",
        "ttlafterfinishedcontroller.go",
    ],
    importmap = "k8s.io/kops/vendor/k8s.io/kubernetes/cmd/kube-controller-manager/app/options",
    importpath = "k8s.io/kubernetes/cmd/kube-controller-manager/app/options",
    visibility = ["//visibility:public"],
    deps = [
        "//vendor/github.com/spf13/pflag:go_default_library",
        "//vendor/k8s.io/api/core/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/runtime:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/errors:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/server/options:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/feature:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/util/flag:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes:go_default_library",
        "//vendor/k8s.io/client-go/kubernetes/typed/core/v1:go_default_library",
        "//vendor/k8s.io/client-go/rest:go_default_library",
        "//vendor/k8s.io/client-go/tools/clientcmd:go_default_library",
        "//vendor/k8s.io/client-go/tools/record:go_default_library",
        "//vendor/k8s.io/klog:go_default_library",
        "//vendor/k8s.io/kube-controller-manager/config/v1alpha1:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/controller-manager/app/options:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/kube-controller-manager/app/config:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/api/legacyscheme:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/controller/apis/config:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/controller/apis/config/v1alpha1:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/controller/garbagecollector:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/features:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/master/ports:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    srcs = ["options_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//vendor/github.com/spf13/pflag:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/config:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/apis/meta/v1:go_default_library",
        "//vendor/k8s.io/apimachinery/pkg/util/diff:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/apis/config:go_default_library",
        "//vendor/k8s.io/apiserver/pkg/server/options:go_default_library",
        "//vendor/k8s.io/kubernetes/cmd/controller-manager/app/options:go_default_library",
        "//vendor/k8s.io/kubernetes/pkg/controller/apis/config:go_default_library",
    ],
)
